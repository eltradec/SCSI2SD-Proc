ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_EP_1_ISR, %function
  25              	USBFS_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS_episr.c"
   1:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_episr.c **** 
  19:Generated_Source\PSoC5/USBFS_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 2


  31:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
  32:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC5/USBFS_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  38              		.loc 1 55 0
  39 0004 0D4B     		ldr	r3, .L3
  40 0006 0122     		movs	r2, #1
  41 0008 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  42              		.loc 1 66 0
  43 000a 0D4B     		ldr	r3, .L3+4
  44 000c 9B7C     		ldrb	r3, [r3, #18]
  67:Generated_Source\PSoC5/USBFS_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  45              		.loc 1 69 0
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 3


  46 000e 0D4B     		ldr	r3, .L3+8
  47 0010 1B7B     		ldrb	r3, [r3, #12]
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 03F00303 		and	r3, r3, #3
  50 0018 012B     		cmp	r3, #1
  51 001a 08D0     		beq	.L2
  70:Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  52              		.loc 1 71 0
  53 001c 094B     		ldr	r3, .L3+8
  54 001e DB7B     		ldrb	r3, [r3, #15]
  55 0020 DBB2     		uxtb	r3, r3
  56 0022 83F07F03 		eor	r3, r3, #127
  57 0026 DB43     		mvns	r3, r3
  58 0028 DAB2     		uxtb	r2, r3
  59 002a 064B     		ldr	r3, .L3+8
  60 002c DA73     		strb	r2, [r3, #15]
  61              	.L2:
  72:Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  62              		.loc 1 80 0
  63 002e 054B     		ldr	r3, .L3+8
  64 0030 0122     		movs	r2, #1
  65 0032 5A73     		strb	r2, [r3, #13]
  81:Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBFS_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 4


 107:Generated_Source\PSoC5/USBFS_episr.c ****     }
  66              		.loc 1 107 0
  67 0034 00BF     		nop
  68 0036 BD46     		mov	sp, r7
  69              		.cfi_def_cfa_register 13
  70              		@ sp needed
  71 0038 80BC     		pop	{r7}
  72              		.cfi_restore 7
  73              		.cfi_def_cfa_offset 0
  74 003a 7047     		bx	lr
  75              	.L4:
  76              		.align	2
  77              	.L3:
  78 003c 0B600040 		.word	1073766411
  79 0040 FC5F0040 		.word	1073766396
  80 0044 00000000 		.word	USBFS_EP
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  84              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  85              		.align	2
  86              		.global	USBFS_EP_2_ISR
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBFS_EP_2_ISR, %function
  90              	USBFS_EP_2_ISR:
  91              	.LFB1:
 108:Generated_Source\PSoC5/USBFS_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_episr.c ****     {
  92              		.loc 1 121 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 5


 128:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
 102              		.loc 1 137 0
 103 0004 0E4B     		ldr	r3, .L7
 104 0006 0222     		movs	r2, #2
 105 0008 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBFS_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
 106              		.loc 1 148 0
 107 000a 0E4B     		ldr	r3, .L7+4
 108 000c 93F82230 		ldrb	r3, [r3, #34]
 149:Generated_Source\PSoC5/USBFS_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
 109              		.loc 1 151 0
 110 0010 0D4B     		ldr	r3, .L7+8
 111 0012 1B7E     		ldrb	r3, [r3, #24]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 03F00303 		and	r3, r3, #3
 114 001a 012B     		cmp	r3, #1
 115 001c 08D0     		beq	.L6
 152:Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 116              		.loc 1 153 0
 117 001e 0A4B     		ldr	r3, .L7+8
 118 0020 DB7E     		ldrb	r3, [r3, #27]
 119 0022 DBB2     		uxtb	r3, r3
 120 0024 83F07F03 		eor	r3, r3, #127
 121 0028 DB43     		mvns	r3, r3
 122 002a DAB2     		uxtb	r2, r3
 123 002c 064B     		ldr	r3, .L7+8
 124 002e DA76     		strb	r2, [r3, #27]
 125              	.L6:
 154:Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 6


 161:Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
 126              		.loc 1 162 0
 127 0030 054B     		ldr	r3, .L7+8
 128 0032 0122     		movs	r2, #1
 129 0034 5A76     		strb	r2, [r3, #25]
 163:Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_episr.c ****     }
 130              		.loc 1 189 0
 131 0036 00BF     		nop
 132 0038 BD46     		mov	sp, r7
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 003a 80BC     		pop	{r7}
 136              		.cfi_restore 7
 137              		.cfi_def_cfa_offset 0
 138 003c 7047     		bx	lr
 139              	.L8:
 140 003e 00BF     		.align	2
 141              	.L7:
 142 0040 0B600040 		.word	1073766411
 143 0044 FC5F0040 		.word	1073766396
 144 0048 00000000 		.word	USBFS_EP
 145              		.cfi_endproc
 146              	.LFE1:
 147              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
 148              		.section	.text.USBFS_EP_3_ISR,"ax",%progbits
 149              		.align	2
 150              		.global	USBFS_EP_3_ISR
 151              		.thumb
 152              		.thumb_func
 153              		.type	USBFS_EP_3_ISR, %function
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 7


 154              	USBFS_EP_3_ISR:
 155              	.LFB2:
 190:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_episr.c ****     {
 156              		.loc 1 202 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 0000 80B4     		push	{r7}
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 7, -4
 164 0002 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 166              		.loc 1 218 0
 167 0004 104B     		ldr	r3, .L11
 168 0006 0422     		movs	r2, #4
 169 0008 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBFS_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 170              		.loc 1 229 0
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 8


 171 000a 104B     		ldr	r3, .L11+4
 172 000c 93F83230 		ldrb	r3, [r3, #50]
 230:Generated_Source\PSoC5/USBFS_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 173              		.loc 1 232 0
 174 0010 0F4B     		ldr	r3, .L11+8
 175 0012 93F82430 		ldrb	r3, [r3, #36]
 176 0016 DBB2     		uxtb	r3, r3
 177 0018 03F00303 		and	r3, r3, #3
 178 001c 012B     		cmp	r3, #1
 179 001e 0AD0     		beq	.L10
 233:Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 180              		.loc 1 234 0
 181 0020 0B4B     		ldr	r3, .L11+8
 182 0022 93F82730 		ldrb	r3, [r3, #39]
 183 0026 DBB2     		uxtb	r3, r3
 184 0028 83F07F03 		eor	r3, r3, #127
 185 002c DB43     		mvns	r3, r3
 186 002e DAB2     		uxtb	r2, r3
 187 0030 074B     		ldr	r3, .L11+8
 188 0032 83F82720 		strb	r2, [r3, #39]
 189              	.L10:
 235:Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 190              		.loc 1 243 0
 191 0036 064B     		ldr	r3, .L11+8
 192 0038 0122     		movs	r2, #1
 193 003a 83F82520 		strb	r2, [r3, #37]
 244:Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 9


 264:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_episr.c ****     }
 194              		.loc 1 270 0
 195 003e 00BF     		nop
 196 0040 BD46     		mov	sp, r7
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0042 80BC     		pop	{r7}
 200              		.cfi_restore 7
 201              		.cfi_def_cfa_offset 0
 202 0044 7047     		bx	lr
 203              	.L12:
 204 0046 00BF     		.align	2
 205              	.L11:
 206 0048 0B600040 		.word	1073766411
 207 004c FC5F0040 		.word	1073766396
 208 0050 00000000 		.word	USBFS_EP
 209              		.cfi_endproc
 210              	.LFE2:
 211              		.size	USBFS_EP_3_ISR, .-USBFS_EP_3_ISR
 212              		.section	.text.USBFS_EP_4_ISR,"ax",%progbits
 213              		.align	2
 214              		.global	USBFS_EP_4_ISR
 215              		.thumb
 216              		.thumb_func
 217              		.type	USBFS_EP_4_ISR, %function
 218              	USBFS_EP_4_ISR:
 219              	.LFB3:
 271:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_episr.c ****     {
 220              		.loc 1 283 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225 0000 80B4     		push	{r7}
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 0002 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
 284:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 10


 285:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 230              		.loc 1 299 0
 231 0004 104B     		ldr	r3, .L15
 232 0006 0822     		movs	r2, #8
 233 0008 1A70     		strb	r2, [r3]
 300:Generated_Source\PSoC5/USBFS_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 234              		.loc 1 310 0
 235 000a 104B     		ldr	r3, .L15+4
 236 000c 93F84230 		ldrb	r3, [r3, #66]
 311:Generated_Source\PSoC5/USBFS_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 237              		.loc 1 313 0
 238 0010 0F4B     		ldr	r3, .L15+8
 239 0012 93F83030 		ldrb	r3, [r3, #48]
 240 0016 DBB2     		uxtb	r3, r3
 241 0018 03F00303 		and	r3, r3, #3
 242 001c 012B     		cmp	r3, #1
 243 001e 0AD0     		beq	.L14
 314:Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 244              		.loc 1 315 0
 245 0020 0B4B     		ldr	r3, .L15+8
 246 0022 93F83330 		ldrb	r3, [r3, #51]
 247 0026 DBB2     		uxtb	r3, r3
 248 0028 83F07F03 		eor	r3, r3, #127
 249 002c DB43     		mvns	r3, r3
 250 002e DAB2     		uxtb	r2, r3
 251 0030 074B     		ldr	r3, .L15+8
 252 0032 83F83320 		strb	r2, [r3, #51]
 253              	.L14:
 316:Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 11


 318:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 254              		.loc 1 324 0
 255 0036 064B     		ldr	r3, .L15+8
 256 0038 0122     		movs	r2, #1
 257 003a 83F83120 		strb	r2, [r3, #49]
 325:Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_episr.c ****     }
 258              		.loc 1 351 0
 259 003e 00BF     		nop
 260 0040 BD46     		mov	sp, r7
 261              		.cfi_def_cfa_register 13
 262              		@ sp needed
 263 0042 80BC     		pop	{r7}
 264              		.cfi_restore 7
 265              		.cfi_def_cfa_offset 0
 266 0044 7047     		bx	lr
 267              	.L16:
 268 0046 00BF     		.align	2
 269              	.L15:
 270 0048 0B600040 		.word	1073766411
 271 004c FC5F0040 		.word	1073766396
 272 0050 00000000 		.word	USBFS_EP
 273              		.cfi_endproc
 274              	.LFE3:
 275              		.size	USBFS_EP_4_ISR, .-USBFS_EP_4_ISR
 276              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 12


 277              		.align	2
 278              		.global	USBFS_SOF_ISR
 279              		.thumb
 280              		.thumb_func
 281              		.type	USBFS_SOF_ISR, %function
 282              	USBFS_SOF_ISR:
 283              	.LFB4:
 352:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 13


 402:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_episr.c ****     {
 448:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_episr.c ****         {
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 14


 459:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_episr.c ****     }
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 15


 516:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBFS_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 16


 573:Generated_Source\PSoC5/USBFS_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBFS_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_episr.c ****         
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 17


 630:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 18


 687:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_episr.c ****     {
 284              		.loc 1 694 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 80B4     		push	{r7}
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 0002 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 695:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_episr.c ****     }
 294              		.loc 1 708 0
 295 0004 00BF     		nop
 296 0006 BD46     		mov	sp, r7
 297              		.cfi_def_cfa_register 13
 298              		@ sp needed
 299 0008 80BC     		pop	{r7}
 300              		.cfi_restore 7
 301              		.cfi_def_cfa_offset 0
 302 000a 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE4:
 305              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 306              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 307              		.align	2
 308              		.global	USBFS_BUS_RESET_ISR
 309              		.thumb
 310              		.thumb_func
 311              		.type	USBFS_BUS_RESET_ISR, %function
 312              	USBFS_BUS_RESET_ISR:
 313              	.LFB5:
 709:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 19


 714:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_episr.c **** {
 314              		.loc 1 723 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318 0000 80B5     		push	{r7, lr}
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 7, -8
 321              		.cfi_offset 14, -4
 322 0002 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 724:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 324              		.loc 1 734 0
 325 0004 FFF7FEFF 		bl	USBFS_ReInitComponent
 735:Generated_Source\PSoC5/USBFS_episr.c **** 
 736:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBFS_episr.c **** }
 326              		.loc 1 739 0
 327 0008 00BF     		nop
 328 000a 80BD     		pop	{r7, pc}
 329              		.cfi_endproc
 330              	.LFE5:
 331              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 332              		.text
 333              	.Letext0:
 334              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 335              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 336              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 337              		.section	.debug_info,"",%progbits
 338              	.Ldebug_info0:
 339 0000 49020000 		.4byte	0x249
 340 0004 0400     		.2byte	0x4
 341 0006 00000000 		.4byte	.Ldebug_abbrev0
 342 000a 04       		.byte	0x4
 343 000b 01       		.uleb128 0x1
 344 000c 00000000 		.4byte	.LASF39
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 20


 345 0010 0C       		.byte	0xc
 346 0011 BC000000 		.4byte	.LASF40
 347 0015 26020000 		.4byte	.LASF41
 348 0019 00000000 		.4byte	.Ldebug_ranges0+0
 349 001d 00000000 		.4byte	0
 350 0021 00000000 		.4byte	.Ldebug_line0
 351 0025 02       		.uleb128 0x2
 352 0026 01       		.byte	0x1
 353 0027 06       		.byte	0x6
 354 0028 B9020000 		.4byte	.LASF0
 355 002c 02       		.uleb128 0x2
 356 002d 01       		.byte	0x1
 357 002e 08       		.byte	0x8
 358 002f 21010000 		.4byte	.LASF1
 359 0033 02       		.uleb128 0x2
 360 0034 02       		.byte	0x2
 361 0035 05       		.byte	0x5
 362 0036 7B020000 		.4byte	.LASF2
 363 003a 02       		.uleb128 0x2
 364 003b 02       		.byte	0x2
 365 003c 07       		.byte	0x7
 366 003d A9000000 		.4byte	.LASF3
 367 0041 02       		.uleb128 0x2
 368 0042 04       		.byte	0x4
 369 0043 05       		.byte	0x5
 370 0044 95020000 		.4byte	.LASF4
 371 0048 02       		.uleb128 0x2
 372 0049 04       		.byte	0x4
 373 004a 07       		.byte	0x7
 374 004b 3F010000 		.4byte	.LASF5
 375 004f 02       		.uleb128 0x2
 376 0050 08       		.byte	0x8
 377 0051 05       		.byte	0x5
 378 0052 18020000 		.4byte	.LASF6
 379 0056 02       		.uleb128 0x2
 380 0057 08       		.byte	0x8
 381 0058 07       		.byte	0x7
 382 0059 D1010000 		.4byte	.LASF7
 383 005d 03       		.uleb128 0x3
 384 005e 04       		.byte	0x4
 385 005f 05       		.byte	0x5
 386 0060 696E7400 		.ascii	"int\000"
 387 0064 02       		.uleb128 0x2
 388 0065 04       		.byte	0x4
 389 0066 07       		.byte	0x7
 390 0067 C4010000 		.4byte	.LASF8
 391 006b 04       		.uleb128 0x4
 392 006c 85020000 		.4byte	.LASF9
 393 0070 02       		.byte	0x2
 394 0071 E401     		.2byte	0x1e4
 395 0073 2C000000 		.4byte	0x2c
 396 0077 04       		.uleb128 0x4
 397 0078 A8010000 		.4byte	.LASF10
 398 007c 02       		.byte	0x2
 399 007d E501     		.2byte	0x1e5
 400 007f 3A000000 		.4byte	0x3a
 401 0083 02       		.uleb128 0x2
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 21


 402 0084 04       		.byte	0x4
 403 0085 04       		.byte	0x4
 404 0086 94000000 		.4byte	.LASF11
 405 008a 02       		.uleb128 0x2
 406 008b 08       		.byte	0x8
 407 008c 04       		.byte	0x4
 408 008d 82010000 		.4byte	.LASF12
 409 0091 02       		.uleb128 0x2
 410 0092 01       		.byte	0x1
 411 0093 08       		.byte	0x8
 412 0094 6B020000 		.4byte	.LASF13
 413 0098 04       		.uleb128 0x4
 414 0099 2F010000 		.4byte	.LASF14
 415 009d 02       		.byte	0x2
 416 009e 8E02     		.2byte	0x28e
 417 00a0 A4000000 		.4byte	0xa4
 418 00a4 05       		.uleb128 0x5
 419 00a5 6B000000 		.4byte	0x6b
 420 00a9 02       		.uleb128 0x2
 421 00aa 08       		.byte	0x8
 422 00ab 04       		.byte	0x4
 423 00ac AD020000 		.4byte	.LASF15
 424 00b0 02       		.uleb128 0x2
 425 00b1 04       		.byte	0x4
 426 00b2 07       		.byte	0x7
 427 00b3 01020000 		.4byte	.LASF16
 428 00b7 06       		.uleb128 0x6
 429 00b8 0C       		.byte	0xc
 430 00b9 03       		.byte	0x3
 431 00ba 9A       		.byte	0x9a
 432 00bb 2C010000 		.4byte	0x12c
 433 00bf 07       		.uleb128 0x7
 434 00c0 0A020000 		.4byte	.LASF17
 435 00c4 03       		.byte	0x3
 436 00c5 9C       		.byte	0x9c
 437 00c6 6B000000 		.4byte	0x6b
 438 00ca 00       		.byte	0
 439 00cb 07       		.uleb128 0x7
 440 00cc 34010000 		.4byte	.LASF18
 441 00d0 03       		.byte	0x3
 442 00d1 9D       		.byte	0x9d
 443 00d2 6B000000 		.4byte	0x6b
 444 00d6 01       		.byte	0x1
 445 00d7 07       		.uleb128 0x7
 446 00d8 E8010000 		.4byte	.LASF19
 447 00dc 03       		.byte	0x3
 448 00dd 9E       		.byte	0x9e
 449 00de 6B000000 		.4byte	0x6b
 450 00e2 02       		.byte	0x2
 451 00e3 07       		.uleb128 0x7
 452 00e4 18010000 		.4byte	.LASF20
 453 00e8 03       		.byte	0x3
 454 00e9 9F       		.byte	0x9f
 455 00ea 6B000000 		.4byte	0x6b
 456 00ee 03       		.byte	0x3
 457 00ef 07       		.uleb128 0x7
 458 00f0 51010000 		.4byte	.LASF21
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 22


 459 00f4 03       		.byte	0x3
 460 00f5 A0       		.byte	0xa0
 461 00f6 6B000000 		.4byte	0x6b
 462 00fa 04       		.byte	0x4
 463 00fb 07       		.uleb128 0x7
 464 00fc 11020000 		.4byte	.LASF22
 465 0100 03       		.byte	0x3
 466 0101 A1       		.byte	0xa1
 467 0102 6B000000 		.4byte	0x6b
 468 0106 05       		.byte	0x5
 469 0107 07       		.uleb128 0x7
 470 0108 9D010000 		.4byte	.LASF23
 471 010c 03       		.byte	0x3
 472 010d A2       		.byte	0xa2
 473 010e 77000000 		.4byte	0x77
 474 0112 06       		.byte	0x6
 475 0113 07       		.uleb128 0x7
 476 0114 70020000 		.4byte	.LASF24
 477 0118 03       		.byte	0x3
 478 0119 A3       		.byte	0xa3
 479 011a 77000000 		.4byte	0x77
 480 011e 08       		.byte	0x8
 481 011f 07       		.uleb128 0x7
 482 0120 8B020000 		.4byte	.LASF25
 483 0124 03       		.byte	0x3
 484 0125 A4       		.byte	0xa4
 485 0126 6B000000 		.4byte	0x6b
 486 012a 0A       		.byte	0xa
 487 012b 00       		.byte	0
 488 012c 08       		.uleb128 0x8
 489 012d E1000000 		.4byte	.LASF26
 490 0131 03       		.byte	0x3
 491 0132 A5       		.byte	0xa5
 492 0133 B7000000 		.4byte	0xb7
 493 0137 06       		.uleb128 0x6
 494 0138 10       		.byte	0x10
 495 0139 03       		.byte	0x3
 496 013a E1       		.byte	0xe1
 497 013b 70010000 		.4byte	0x170
 498 013f 07       		.uleb128 0x7
 499 0140 0A010000 		.4byte	.LASF27
 500 0144 03       		.byte	0x3
 501 0145 E3       		.byte	0xe3
 502 0146 6B000000 		.4byte	0x6b
 503 014a 00       		.byte	0
 504 014b 07       		.uleb128 0x7
 505 014c 11010000 		.4byte	.LASF28
 506 0150 03       		.byte	0x3
 507 0151 E4       		.byte	0xe4
 508 0152 6B000000 		.4byte	0x6b
 509 0156 01       		.byte	0x1
 510 0157 07       		.uleb128 0x7
 511 0158 8E000000 		.4byte	.LASF29
 512 015c 03       		.byte	0x3
 513 015d E5       		.byte	0xe5
 514 015e 6B000000 		.4byte	0x6b
 515 0162 02       		.byte	0x2
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 23


 516 0163 09       		.uleb128 0x9
 517 0164 67617000 		.ascii	"gap\000"
 518 0168 03       		.byte	0x3
 519 0169 E6       		.byte	0xe6
 520 016a 70010000 		.4byte	0x170
 521 016e 03       		.byte	0x3
 522 016f 00       		.byte	0
 523 0170 0A       		.uleb128 0xa
 524 0171 6B000000 		.4byte	0x6b
 525 0175 80010000 		.4byte	0x180
 526 0179 0B       		.uleb128 0xb
 527 017a B0000000 		.4byte	0xb0
 528 017e 0C       		.byte	0xc
 529 017f 00       		.byte	0
 530 0180 08       		.uleb128 0x8
 531 0181 89010000 		.4byte	.LASF30
 532 0185 03       		.byte	0x3
 533 0186 E7       		.byte	0xe7
 534 0187 37010000 		.4byte	0x137
 535 018b 0C       		.uleb128 0xc
 536 018c 90       		.byte	0x90
 537 018d 03       		.byte	0x3
 538 018e 1B01     		.2byte	0x11b
 539 0190 A2010000 		.4byte	0x1a2
 540 0194 0D       		.uleb128 0xd
 541 0195 73010000 		.4byte	.LASF31
 542 0199 03       		.byte	0x3
 543 019a 1D01     		.2byte	0x11d
 544 019c A2010000 		.4byte	0x1a2
 545 01a0 00       		.byte	0
 546 01a1 00       		.byte	0
 547 01a2 0A       		.uleb128 0xa
 548 01a3 80010000 		.4byte	0x180
 549 01a7 B2010000 		.4byte	0x1b2
 550 01ab 0B       		.uleb128 0xb
 551 01ac B0000000 		.4byte	0xb0
 552 01b0 08       		.byte	0x8
 553 01b1 00       		.byte	0
 554 01b2 04       		.uleb128 0x4
 555 01b3 AF010000 		.4byte	.LASF32
 556 01b7 03       		.byte	0x3
 557 01b8 1E01     		.2byte	0x11e
 558 01ba 8B010000 		.4byte	0x18b
 559 01be 0E       		.uleb128 0xe
 560 01bf F2010000 		.4byte	.LASF33
 561 01c3 01       		.byte	0x1
 562 01c4 25       		.byte	0x25
 563 01c5 00000000 		.4byte	.LFB0
 564 01c9 48000000 		.4byte	.LFE0-.LFB0
 565 01cd 01       		.uleb128 0x1
 566 01ce 9C       		.byte	0x9c
 567 01cf 0E       		.uleb128 0xe
 568 01d0 9E020000 		.4byte	.LASF34
 569 01d4 01       		.byte	0x1
 570 01d5 78       		.byte	0x78
 571 01d6 00000000 		.4byte	.LFB1
 572 01da 4C000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 24


 573 01de 01       		.uleb128 0x1
 574 01df 9C       		.byte	0x9c
 575 01e0 0E       		.uleb128 0xe
 576 01e1 9A000000 		.4byte	.LASF35
 577 01e5 01       		.byte	0x1
 578 01e6 C9       		.byte	0xc9
 579 01e7 00000000 		.4byte	.LFB2
 580 01eb 54000000 		.4byte	.LFE2-.LFB2
 581 01ef 01       		.uleb128 0x1
 582 01f0 9C       		.byte	0x9c
 583 01f1 0F       		.uleb128 0xf
 584 01f2 56010000 		.4byte	.LASF36
 585 01f6 01       		.byte	0x1
 586 01f7 1A01     		.2byte	0x11a
 587 01f9 00000000 		.4byte	.LFB3
 588 01fd 54000000 		.4byte	.LFE3-.LFB3
 589 0201 01       		.uleb128 0x1
 590 0202 9C       		.byte	0x9c
 591 0203 0F       		.uleb128 0xf
 592 0204 65010000 		.4byte	.LASF37
 593 0208 01       		.byte	0x1
 594 0209 B502     		.2byte	0x2b5
 595 020b 00000000 		.4byte	.LFB4
 596 020f 0C000000 		.4byte	.LFE4-.LFB4
 597 0213 01       		.uleb128 0x1
 598 0214 9C       		.byte	0x9c
 599 0215 10       		.uleb128 0x10
 600 0216 F6000000 		.4byte	.LASF38
 601 021a 01       		.byte	0x1
 602 021b D202     		.2byte	0x2d2
 603 021d 00000000 		.4byte	.LFB5
 604 0221 0C000000 		.4byte	.LFE5-.LFB5
 605 0225 01       		.uleb128 0x1
 606 0226 9C       		.byte	0x9c
 607 0227 0A       		.uleb128 0xa
 608 0228 37020000 		.4byte	0x237
 609 022c 37020000 		.4byte	0x237
 610 0230 0B       		.uleb128 0xb
 611 0231 B0000000 		.4byte	0xb0
 612 0235 08       		.byte	0x8
 613 0236 00       		.byte	0
 614 0237 05       		.uleb128 0x5
 615 0238 2C010000 		.4byte	0x12c
 616 023c 11       		.uleb128 0x11
 617 023d 79010000 		.4byte	.LASF42
 618 0241 04       		.byte	0x4
 619 0242 8F       		.byte	0x8f
 620 0243 47020000 		.4byte	0x247
 621 0247 05       		.uleb128 0x5
 622 0248 27020000 		.4byte	0x227
 623 024c 00       		.byte	0
 624              		.section	.debug_abbrev,"",%progbits
 625              	.Ldebug_abbrev0:
 626 0000 01       		.uleb128 0x1
 627 0001 11       		.uleb128 0x11
 628 0002 01       		.byte	0x1
 629 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 25


 630 0004 0E       		.uleb128 0xe
 631 0005 13       		.uleb128 0x13
 632 0006 0B       		.uleb128 0xb
 633 0007 03       		.uleb128 0x3
 634 0008 0E       		.uleb128 0xe
 635 0009 1B       		.uleb128 0x1b
 636 000a 0E       		.uleb128 0xe
 637 000b 55       		.uleb128 0x55
 638 000c 17       		.uleb128 0x17
 639 000d 11       		.uleb128 0x11
 640 000e 01       		.uleb128 0x1
 641 000f 10       		.uleb128 0x10
 642 0010 17       		.uleb128 0x17
 643 0011 00       		.byte	0
 644 0012 00       		.byte	0
 645 0013 02       		.uleb128 0x2
 646 0014 24       		.uleb128 0x24
 647 0015 00       		.byte	0
 648 0016 0B       		.uleb128 0xb
 649 0017 0B       		.uleb128 0xb
 650 0018 3E       		.uleb128 0x3e
 651 0019 0B       		.uleb128 0xb
 652 001a 03       		.uleb128 0x3
 653 001b 0E       		.uleb128 0xe
 654 001c 00       		.byte	0
 655 001d 00       		.byte	0
 656 001e 03       		.uleb128 0x3
 657 001f 24       		.uleb128 0x24
 658 0020 00       		.byte	0
 659 0021 0B       		.uleb128 0xb
 660 0022 0B       		.uleb128 0xb
 661 0023 3E       		.uleb128 0x3e
 662 0024 0B       		.uleb128 0xb
 663 0025 03       		.uleb128 0x3
 664 0026 08       		.uleb128 0x8
 665 0027 00       		.byte	0
 666 0028 00       		.byte	0
 667 0029 04       		.uleb128 0x4
 668 002a 16       		.uleb128 0x16
 669 002b 00       		.byte	0
 670 002c 03       		.uleb128 0x3
 671 002d 0E       		.uleb128 0xe
 672 002e 3A       		.uleb128 0x3a
 673 002f 0B       		.uleb128 0xb
 674 0030 3B       		.uleb128 0x3b
 675 0031 05       		.uleb128 0x5
 676 0032 49       		.uleb128 0x49
 677 0033 13       		.uleb128 0x13
 678 0034 00       		.byte	0
 679 0035 00       		.byte	0
 680 0036 05       		.uleb128 0x5
 681 0037 35       		.uleb128 0x35
 682 0038 00       		.byte	0
 683 0039 49       		.uleb128 0x49
 684 003a 13       		.uleb128 0x13
 685 003b 00       		.byte	0
 686 003c 00       		.byte	0
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 26


 687 003d 06       		.uleb128 0x6
 688 003e 13       		.uleb128 0x13
 689 003f 01       		.byte	0x1
 690 0040 0B       		.uleb128 0xb
 691 0041 0B       		.uleb128 0xb
 692 0042 3A       		.uleb128 0x3a
 693 0043 0B       		.uleb128 0xb
 694 0044 3B       		.uleb128 0x3b
 695 0045 0B       		.uleb128 0xb
 696 0046 01       		.uleb128 0x1
 697 0047 13       		.uleb128 0x13
 698 0048 00       		.byte	0
 699 0049 00       		.byte	0
 700 004a 07       		.uleb128 0x7
 701 004b 0D       		.uleb128 0xd
 702 004c 00       		.byte	0
 703 004d 03       		.uleb128 0x3
 704 004e 0E       		.uleb128 0xe
 705 004f 3A       		.uleb128 0x3a
 706 0050 0B       		.uleb128 0xb
 707 0051 3B       		.uleb128 0x3b
 708 0052 0B       		.uleb128 0xb
 709 0053 49       		.uleb128 0x49
 710 0054 13       		.uleb128 0x13
 711 0055 38       		.uleb128 0x38
 712 0056 0B       		.uleb128 0xb
 713 0057 00       		.byte	0
 714 0058 00       		.byte	0
 715 0059 08       		.uleb128 0x8
 716 005a 16       		.uleb128 0x16
 717 005b 00       		.byte	0
 718 005c 03       		.uleb128 0x3
 719 005d 0E       		.uleb128 0xe
 720 005e 3A       		.uleb128 0x3a
 721 005f 0B       		.uleb128 0xb
 722 0060 3B       		.uleb128 0x3b
 723 0061 0B       		.uleb128 0xb
 724 0062 49       		.uleb128 0x49
 725 0063 13       		.uleb128 0x13
 726 0064 00       		.byte	0
 727 0065 00       		.byte	0
 728 0066 09       		.uleb128 0x9
 729 0067 0D       		.uleb128 0xd
 730 0068 00       		.byte	0
 731 0069 03       		.uleb128 0x3
 732 006a 08       		.uleb128 0x8
 733 006b 3A       		.uleb128 0x3a
 734 006c 0B       		.uleb128 0xb
 735 006d 3B       		.uleb128 0x3b
 736 006e 0B       		.uleb128 0xb
 737 006f 49       		.uleb128 0x49
 738 0070 13       		.uleb128 0x13
 739 0071 38       		.uleb128 0x38
 740 0072 0B       		.uleb128 0xb
 741 0073 00       		.byte	0
 742 0074 00       		.byte	0
 743 0075 0A       		.uleb128 0xa
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 27


 744 0076 01       		.uleb128 0x1
 745 0077 01       		.byte	0x1
 746 0078 49       		.uleb128 0x49
 747 0079 13       		.uleb128 0x13
 748 007a 01       		.uleb128 0x1
 749 007b 13       		.uleb128 0x13
 750 007c 00       		.byte	0
 751 007d 00       		.byte	0
 752 007e 0B       		.uleb128 0xb
 753 007f 21       		.uleb128 0x21
 754 0080 00       		.byte	0
 755 0081 49       		.uleb128 0x49
 756 0082 13       		.uleb128 0x13
 757 0083 2F       		.uleb128 0x2f
 758 0084 0B       		.uleb128 0xb
 759 0085 00       		.byte	0
 760 0086 00       		.byte	0
 761 0087 0C       		.uleb128 0xc
 762 0088 13       		.uleb128 0x13
 763 0089 01       		.byte	0x1
 764 008a 0B       		.uleb128 0xb
 765 008b 0B       		.uleb128 0xb
 766 008c 3A       		.uleb128 0x3a
 767 008d 0B       		.uleb128 0xb
 768 008e 3B       		.uleb128 0x3b
 769 008f 05       		.uleb128 0x5
 770 0090 01       		.uleb128 0x1
 771 0091 13       		.uleb128 0x13
 772 0092 00       		.byte	0
 773 0093 00       		.byte	0
 774 0094 0D       		.uleb128 0xd
 775 0095 0D       		.uleb128 0xd
 776 0096 00       		.byte	0
 777 0097 03       		.uleb128 0x3
 778 0098 0E       		.uleb128 0xe
 779 0099 3A       		.uleb128 0x3a
 780 009a 0B       		.uleb128 0xb
 781 009b 3B       		.uleb128 0x3b
 782 009c 05       		.uleb128 0x5
 783 009d 49       		.uleb128 0x49
 784 009e 13       		.uleb128 0x13
 785 009f 38       		.uleb128 0x38
 786 00a0 0B       		.uleb128 0xb
 787 00a1 00       		.byte	0
 788 00a2 00       		.byte	0
 789 00a3 0E       		.uleb128 0xe
 790 00a4 2E       		.uleb128 0x2e
 791 00a5 00       		.byte	0
 792 00a6 3F       		.uleb128 0x3f
 793 00a7 19       		.uleb128 0x19
 794 00a8 03       		.uleb128 0x3
 795 00a9 0E       		.uleb128 0xe
 796 00aa 3A       		.uleb128 0x3a
 797 00ab 0B       		.uleb128 0xb
 798 00ac 3B       		.uleb128 0x3b
 799 00ad 0B       		.uleb128 0xb
 800 00ae 27       		.uleb128 0x27
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 28


 801 00af 19       		.uleb128 0x19
 802 00b0 11       		.uleb128 0x11
 803 00b1 01       		.uleb128 0x1
 804 00b2 12       		.uleb128 0x12
 805 00b3 06       		.uleb128 0x6
 806 00b4 40       		.uleb128 0x40
 807 00b5 18       		.uleb128 0x18
 808 00b6 9742     		.uleb128 0x2117
 809 00b8 19       		.uleb128 0x19
 810 00b9 00       		.byte	0
 811 00ba 00       		.byte	0
 812 00bb 0F       		.uleb128 0xf
 813 00bc 2E       		.uleb128 0x2e
 814 00bd 00       		.byte	0
 815 00be 3F       		.uleb128 0x3f
 816 00bf 19       		.uleb128 0x19
 817 00c0 03       		.uleb128 0x3
 818 00c1 0E       		.uleb128 0xe
 819 00c2 3A       		.uleb128 0x3a
 820 00c3 0B       		.uleb128 0xb
 821 00c4 3B       		.uleb128 0x3b
 822 00c5 05       		.uleb128 0x5
 823 00c6 27       		.uleb128 0x27
 824 00c7 19       		.uleb128 0x19
 825 00c8 11       		.uleb128 0x11
 826 00c9 01       		.uleb128 0x1
 827 00ca 12       		.uleb128 0x12
 828 00cb 06       		.uleb128 0x6
 829 00cc 40       		.uleb128 0x40
 830 00cd 18       		.uleb128 0x18
 831 00ce 9742     		.uleb128 0x2117
 832 00d0 19       		.uleb128 0x19
 833 00d1 00       		.byte	0
 834 00d2 00       		.byte	0
 835 00d3 10       		.uleb128 0x10
 836 00d4 2E       		.uleb128 0x2e
 837 00d5 00       		.byte	0
 838 00d6 3F       		.uleb128 0x3f
 839 00d7 19       		.uleb128 0x19
 840 00d8 03       		.uleb128 0x3
 841 00d9 0E       		.uleb128 0xe
 842 00da 3A       		.uleb128 0x3a
 843 00db 0B       		.uleb128 0xb
 844 00dc 3B       		.uleb128 0x3b
 845 00dd 05       		.uleb128 0x5
 846 00de 27       		.uleb128 0x27
 847 00df 19       		.uleb128 0x19
 848 00e0 11       		.uleb128 0x11
 849 00e1 01       		.uleb128 0x1
 850 00e2 12       		.uleb128 0x12
 851 00e3 06       		.uleb128 0x6
 852 00e4 40       		.uleb128 0x40
 853 00e5 18       		.uleb128 0x18
 854 00e6 9642     		.uleb128 0x2116
 855 00e8 19       		.uleb128 0x19
 856 00e9 00       		.byte	0
 857 00ea 00       		.byte	0
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 29


 858 00eb 11       		.uleb128 0x11
 859 00ec 34       		.uleb128 0x34
 860 00ed 00       		.byte	0
 861 00ee 03       		.uleb128 0x3
 862 00ef 0E       		.uleb128 0xe
 863 00f0 3A       		.uleb128 0x3a
 864 00f1 0B       		.uleb128 0xb
 865 00f2 3B       		.uleb128 0x3b
 866 00f3 0B       		.uleb128 0xb
 867 00f4 49       		.uleb128 0x49
 868 00f5 13       		.uleb128 0x13
 869 00f6 3F       		.uleb128 0x3f
 870 00f7 19       		.uleb128 0x19
 871 00f8 3C       		.uleb128 0x3c
 872 00f9 19       		.uleb128 0x19
 873 00fa 00       		.byte	0
 874 00fb 00       		.byte	0
 875 00fc 00       		.byte	0
 876              		.section	.debug_aranges,"",%progbits
 877 0000 44000000 		.4byte	0x44
 878 0004 0200     		.2byte	0x2
 879 0006 00000000 		.4byte	.Ldebug_info0
 880 000a 04       		.byte	0x4
 881 000b 00       		.byte	0
 882 000c 0000     		.2byte	0
 883 000e 0000     		.2byte	0
 884 0010 00000000 		.4byte	.LFB0
 885 0014 48000000 		.4byte	.LFE0-.LFB0
 886 0018 00000000 		.4byte	.LFB1
 887 001c 4C000000 		.4byte	.LFE1-.LFB1
 888 0020 00000000 		.4byte	.LFB2
 889 0024 54000000 		.4byte	.LFE2-.LFB2
 890 0028 00000000 		.4byte	.LFB3
 891 002c 54000000 		.4byte	.LFE3-.LFB3
 892 0030 00000000 		.4byte	.LFB4
 893 0034 0C000000 		.4byte	.LFE4-.LFB4
 894 0038 00000000 		.4byte	.LFB5
 895 003c 0C000000 		.4byte	.LFE5-.LFB5
 896 0040 00000000 		.4byte	0
 897 0044 00000000 		.4byte	0
 898              		.section	.debug_ranges,"",%progbits
 899              	.Ldebug_ranges0:
 900 0000 00000000 		.4byte	.LFB0
 901 0004 48000000 		.4byte	.LFE0
 902 0008 00000000 		.4byte	.LFB1
 903 000c 4C000000 		.4byte	.LFE1
 904 0010 00000000 		.4byte	.LFB2
 905 0014 54000000 		.4byte	.LFE2
 906 0018 00000000 		.4byte	.LFB3
 907 001c 54000000 		.4byte	.LFE3
 908 0020 00000000 		.4byte	.LFB4
 909 0024 0C000000 		.4byte	.LFE4
 910 0028 00000000 		.4byte	.LFB5
 911 002c 0C000000 		.4byte	.LFE5
 912 0030 00000000 		.4byte	0
 913 0034 00000000 		.4byte	0
 914              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 30


 915              	.Ldebug_line0:
 916 0000 06010000 		.section	.debug_str,"MS",%progbits,1
 916      02006200 
 916      00000201 
 916      FB0E0D00 
 916      01010101 
 917              	.LASF39:
 918 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 918      43313120 
 918      352E342E 
 918      31203230 
 918      31363036 
 919 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 919      20726576 
 919      6973696F 
 919      6E203233 
 919      37373135 
 920 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 920      66756E63 
 920      74696F6E 
 920      2D736563 
 920      74696F6E 
 921              	.LASF29:
 922 008e 65704372 		.ascii	"epCr0\000"
 922      3000
 923              	.LASF11:
 924 0094 666C6F61 		.ascii	"float\000"
 924      7400
 925              	.LASF35:
 926 009a 55534246 		.ascii	"USBFS_EP_3_ISR\000"
 926      535F4550 
 926      5F335F49 
 926      535200
 927              	.LASF3:
 928 00a9 73686F72 		.ascii	"short unsigned int\000"
 928      7420756E 
 928      7369676E 
 928      65642069 
 928      6E7400
 929              	.LASF40:
 930 00bc 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_episr.c\000"
 930      72617465 
 930      645F536F 
 930      75726365 
 930      5C50536F 
 931              	.LASF26:
 932 00e1 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 932      4246535F 
 932      45505F43 
 932      544C5F42 
 932      4C4F434B 
 933              	.LASF38:
 934 00f6 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 934      535F4255 
 934      535F5245 
 934      5345545F 
 934      49535200 
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 31


 935              	.LASF27:
 936 010a 6570436E 		.ascii	"epCnt0\000"
 936      743000
 937              	.LASF28:
 938 0111 6570436E 		.ascii	"epCnt1\000"
 938      743100
 939              	.LASF20:
 940 0118 6570546F 		.ascii	"epToggle\000"
 940      67676C65 
 940      00
 941              	.LASF1:
 942 0121 756E7369 		.ascii	"unsigned char\000"
 942      676E6564 
 942      20636861 
 942      7200
 943              	.LASF14:
 944 012f 72656738 		.ascii	"reg8\000"
 944      00
 945              	.LASF18:
 946 0134 61706945 		.ascii	"apiEpState\000"
 946      70537461 
 946      746500
 947              	.LASF5:
 948 013f 6C6F6E67 		.ascii	"long unsigned int\000"
 948      20756E73 
 948      69676E65 
 948      6420696E 
 948      7400
 949              	.LASF21:
 950 0151 61646472 		.ascii	"addr\000"
 950      00
 951              	.LASF36:
 952 0156 55534246 		.ascii	"USBFS_EP_4_ISR\000"
 952      535F4550 
 952      5F345F49 
 952      535200
 953              	.LASF37:
 954 0165 55534246 		.ascii	"USBFS_SOF_ISR\000"
 954      535F534F 
 954      465F4953 
 954      5200
 955              	.LASF31:
 956 0173 73696545 		.ascii	"sieEp\000"
 956      7000
 957              	.LASF42:
 958 0179 55534246 		.ascii	"USBFS_EP\000"
 958      535F4550 
 958      00
 959              	.LASF12:
 960 0182 646F7562 		.ascii	"double\000"
 960      6C6500
 961              	.LASF30:
 962 0189 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 962      535F7369 
 962      655F6570 
 962      5F737472 
 962      75637400 
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 32


 963              	.LASF23:
 964 019d 62756666 		.ascii	"buffOffset\000"
 964      4F666673 
 964      657400
 965              	.LASF10:
 966 01a8 75696E74 		.ascii	"uint16\000"
 966      313600
 967              	.LASF32:
 968 01af 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 968      535F7369 
 968      655F6570 
 968      735F7374 
 968      72756374 
 969              	.LASF8:
 970 01c4 756E7369 		.ascii	"unsigned int\000"
 970      676E6564 
 970      20696E74 
 970      00
 971              	.LASF7:
 972 01d1 6C6F6E67 		.ascii	"long long unsigned int\000"
 972      206C6F6E 
 972      6720756E 
 972      7369676E 
 972      65642069 
 973              	.LASF19:
 974 01e8 68774570 		.ascii	"hwEpState\000"
 974      53746174 
 974      6500
 975              	.LASF33:
 976 01f2 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 976      535F4550 
 976      5F315F49 
 976      535200
 977              	.LASF16:
 978 0201 73697A65 		.ascii	"sizetype\000"
 978      74797065 
 978      00
 979              	.LASF17:
 980 020a 61747472 		.ascii	"attrib\000"
 980      696200
 981              	.LASF22:
 982 0211 65704D6F 		.ascii	"epMode\000"
 982      646500
 983              	.LASF6:
 984 0218 6C6F6E67 		.ascii	"long long int\000"
 984      206C6F6E 
 984      6720696E 
 984      7400
 985              	.LASF41:
 986 0226 433A5C55 		.ascii	"C:\\Users\\r\\Documents\\Data Sheets\\apple\\SCSI2S"
 986      73657273 
 986      5C725C44 
 986      6F63756D 
 986      656E7473 
 987 0253 445C5343 		.ascii	"D\\SCSI2SD_Copy_01.cydsn\000"
 987      53493253 
 987      445F436F 
ARM GAS  C:\Users\r\AppData\Local\Temp\ccUH5U2L.s 			page 33


 987      70795F30 
 987      312E6379 
 988              	.LASF13:
 989 026b 63686172 		.ascii	"char\000"
 989      00
 990              	.LASF24:
 991 0270 62756666 		.ascii	"bufferSize\000"
 991      65725369 
 991      7A6500
 992              	.LASF2:
 993 027b 73686F72 		.ascii	"short int\000"
 993      7420696E 
 993      7400
 994              	.LASF9:
 995 0285 75696E74 		.ascii	"uint8\000"
 995      3800
 996              	.LASF25:
 997 028b 696E7465 		.ascii	"interface\000"
 997      72666163 
 997      6500
 998              	.LASF4:
 999 0295 6C6F6E67 		.ascii	"long int\000"
 999      20696E74 
 999      00
 1000              	.LASF34:
 1001 029e 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 1001      535F4550 
 1001      5F325F49 
 1001      535200
 1002              	.LASF15:
 1003 02ad 6C6F6E67 		.ascii	"long double\000"
 1003      20646F75 
 1003      626C6500 
 1004              	.LASF0:
 1005 02b9 7369676E 		.ascii	"signed char\000"
 1005      65642063 
 1005      68617200 
 1006              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
